{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Stink\\\\Documents\\\\GitHub\\\\OneMoreSale\\\\frontend\\\\src\\\\item\\\\Item.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Container from '@material-ui/core/Container';\nimport Typography from '@material-ui/core/Typography';\nimport Carousel from 'nuka-carousel';\nimport { Link } from \"react-router-dom\";\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nimport Moment from 'react-moment';\nimport { useQuery } from 'react-query';\nimport axios from \"axios\";\nimport Button from '@material-ui/core/Button';\nimport { useParams } from 'react-router-dom'; // import defaultQueryFn from '../util/defaultQueryFn';\n\nimport { useHistory } from \"react-router-dom\";\nconst containerStyle = {\n  width: '100%',\n  height: '200px'\n};\nconst center = {\n  lat: 37,\n  lng: -121\n};\n\nfunction MapComponent() {\n  _s();\n\n  const [map, setMap] = React.useState(null);\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"*********\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 10,\n      onLoad: onLoad,\n      onUnmount: onUnmount,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 7\n  }, this);\n}\n\n_s(MapComponent, \"cOX+qz8P8Qlgqf5uFzYTRAoc4/c=\");\n\n_c = MapComponent;\n\n/*#__PURE__*/\nReact.memo(MapComponent);\n\nconst AnyReactComponent = ({\n  text\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 60,\n  columnNumber: 41\n}, this);\n\n_c2 = AnyReactComponent;\nconst API_ROOT = 'https://my-json-server.typicode.com/stinkycc/SHMTest';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    flexGrow: 1\n  },\n  button: {\n    margin: theme.spacing(1)\n  },\n  gridItem: {\n    marginTop: 3,\n    marginBottom: 1,\n    width: '60%'\n  },\n  gridInItem: {\n    marginTop: 2,\n    marginBottom: 1,\n    width: '50%'\n  },\n  gridImg: {\n    marginTop: 5,\n    marginBottom: 3,\n    width: '40%'\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    transform: 'translateZ(0)'\n  },\n  title: {\n    variant: 'h4',\n    align: 'left'\n  },\n  carousel: {\n    margin: theme.spacing(2)\n  },\n  item: {\n    color: 'textSecondary',\n    variant: 'body2',\n    align: 'left'\n  }\n}));\n\nasync function getItems() {\n  const {\n    data\n  } = await axios.get(`${API_ROOT}/post`);\n  return data;\n}\n\nexport default function Item(props) {\n  _s2();\n\n  //const { isLoading, isError, data } = useQuery(['postItem', 'post'], getItems);\n  //const { isLoading : ir, isError : ie, data : item} = useQuery(['postItem', 'post'], getItems);\n  //const data = props.postItem;\n  //const { id } = useParams();\n  const id = 3;\n  const {\n    isLoading,\n    isError,\n    data\n  } = useQuery(['postItem', `post/getpostbyid?id=${id}`], defaultQueryFn);\n  const classes = useStyles();\n  const space = 5;\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"loading...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 16\n    }, this);\n  }\n\n  if (isError) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: \"Error\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 16\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"l\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        align: \"left\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Back to result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 141,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: space,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.gridImg,\n          spacing: space,\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Carousel, {\n            heightMode: \"current\",\n            children: data.postImage != null ? data.postImage.map(tile => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: tile.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 80\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 106\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.gridItem,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            align: \"left\",\n            children: data.postTitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: space,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              className: classes.gridInItem,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body2\",\n                align: \"left\",\n                children: [\"Seller: \", data.postOwner]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body2\",\n                align: \"left\",\n                children: [\"Price: \", data.postPrice]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 157,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              className: classes.gridInItem,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body2\",\n                align: \"left\",\n                children: [\"Relaase: \", /*#__PURE__*/_jsxDEV(Moment, {\n                  format: \"YYYY/MM/DD\",\n                  children: data.postDate\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 105\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body2\",\n                align: \"left\",\n                children: [\"Status: \", data.postStatus]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            className: classes.gridItem,\n            spacing: space,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body2\",\n              align: \"left\",\n              children: [\"Condition: \", data.postCondition]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body2\",\n              align: \"left\",\n              children: [\"Transaction:\", data.transactionMethod != null ? data.transactionMethod.map(item => /*#__PURE__*/_jsxDEV(\"a\", {\n                children: [\"\\u2609 \", item.transactionMethod, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 104\n              }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 149\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body2\",\n              align: \"left\",\n              children: [\"Delivery type:\", data.deliveryType != null ? data.deliveryType.map(item => /*#__PURE__*/_jsxDEV(\"a\", {\n                children: [\"\\u2609 \", item.deliveryType, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 94\n              }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 134\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 177,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            className: classes.gridItem,\n            spacing: space,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body2\",\n              align: \"left\",\n              children: [\"Description: \", data.postDescription]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: space,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.gridImg,\n          spacing: space,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            align: \"left\",\n            children: \"Contact Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"body2\",\n            align: \"left\",\n            children: [\"Email: \", data.postEmail]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"body2\",\n            align: \"left\",\n            children: [\"Phone: \", data.postPhone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 188,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"body2\",\n            align: \"left\",\n            children: [\"Loaction: \", data.postAddress, \" ZipCode:\", data.postZipcode]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.gridItem,\n          spacing: space\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 191,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 135,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Item, \"Lz0EMj5t8VN0HGY/EgNMDhoLXhM=\", false, function () {\n  return [useQuery, useStyles];\n});\n\n_c3 = Item;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MapComponent\");\n$RefreshReg$(_c2, \"AnyReactComponent\");\n$RefreshReg$(_c3, \"Item\");","map":{"version":3,"sources":["C:/Users/Stink/Documents/GitHub/OneMoreSale/frontend/src/item/Item.js"],"names":["React","Component","makeStyles","Grid","Divider","Container","Typography","Carousel","Link","GoogleMap","LoadScript","Moment","useQuery","axios","Button","useParams","useHistory","containerStyle","width","height","center","lat","lng","MapComponent","map","setMap","useState","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","memo","AnyReactComponent","text","API_ROOT","useStyles","theme","root","maxWidth","flexGrow","button","margin","spacing","gridItem","marginTop","marginBottom","gridInItem","gridImg","gridList","flexWrap","transform","title","variant","align","carousel","item","color","getItems","data","get","Item","props","id","isLoading","isError","defaultQueryFn","classes","space","postImage","tile","img","postTitle","postOwner","postPrice","postDate","postStatus","postCondition","transactionMethod","deliveryType","postDescription","postEmail","postPhone","postAddress","postZipcode"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Container from '@material-ui/core/Container';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Carousel from 'nuka-carousel';\r\nimport { Link } from \"react-router-dom\";\r\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\r\nimport Moment from 'react-moment'\r\nimport { useQuery } from 'react-query'\r\nimport axios from \"axios\";\r\nimport Button from '@material-ui/core/Button';\r\nimport {useParams} from 'react-router-dom'\r\n// import defaultQueryFn from '../util/defaultQueryFn';\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst containerStyle = {\r\n    width: '100%',\r\n    height: '200px'\r\n  };\r\n   \r\n  const center = {\r\n    lat: 37,\r\n    lng: -121\r\n  };\r\n   \r\nfunction MapComponent() {\r\n    const [map, setMap] = React.useState(null)\r\n   \r\n    const onLoad = React.useCallback(function callback(map) {\r\n      const bounds = new window.google.maps.LatLngBounds();\r\n      map.fitBounds(bounds);\r\n      setMap(map)\r\n    }, [])\r\n   \r\n    const onUnmount = React.useCallback(function callback(map) {\r\n      setMap(null)\r\n    }, [])\r\n   \r\n    return (\r\n      <LoadScript\r\n        googleMapsApiKey=\"*********\"\r\n      >\r\n        <GoogleMap\r\n          mapContainerStyle={containerStyle}\r\n          center={center}\r\n          zoom={10}\r\n          onLoad={onLoad}\r\n          onUnmount={onUnmount}\r\n        >\r\n          { /* Child components, such as markers, info windows, etc. */ }\r\n          <></>\r\n        </GoogleMap>\r\n      </LoadScript>\r\n    )\r\n  }\r\nReact.memo(MapComponent)\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\n\r\nconst API_ROOT = 'https://my-json-server.typicode.com/stinkycc/SHMTest'\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: '100%',\r\n        flexGrow:1,\r\n    },\r\n    button: {\r\n        margin: theme.spacing(1),\r\n    },\r\n\r\n    gridItem:{\r\n        marginTop:3,\r\n        marginBottom:1,\r\n        width:'60%',\r\n    },\r\n    gridInItem:{\r\n        marginTop:2,\r\n        marginBottom:1,\r\n        width:'50%',\r\n    },\r\n    gridImg:{\r\n        marginTop:5,\r\n        marginBottom:3,\r\n        width:'40%',\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        transform: 'translateZ(0)',\r\n    },\r\n    title:{\r\n        variant:'h4',\r\n        align:'left',\r\n    },\r\n    carousel: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    item:{\r\n        color:'textSecondary',\r\n        variant:'body2',\r\n        align:'left',\r\n    }\r\n}));\r\n\r\nasync function getItems() {\r\n    const { data } = await axios.get(`${API_ROOT}/post`)\r\n    return data;   \r\n}\r\n\r\nexport default function Item(props) {\r\n    //const { isLoading, isError, data } = useQuery(['postItem', 'post'], getItems);\r\n    //const { isLoading : ir, isError : ie, data : item} = useQuery(['postItem', 'post'], getItems);\r\n    //const data = props.postItem;\r\n\r\n    //const { id } = useParams();\r\n    const id = 3;\r\n    const { isLoading, isError, data } = useQuery(['postItem', `post/getpostbyid?id=${id}`], defaultQueryFn);\r\n    \r\n\r\n    const classes = useStyles();\r\n    const space = 5;  \r\n    if (isLoading) {\r\n        return <div>loading...</div>\r\n    }\r\n\r\n    if (isError) {\r\n        return <div>Error</div>\r\n    }\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"l\">\r\n            {/* <Button onClick={() => { console.log(id) }}>hhhh{item.postTitle}</Button> */}\r\n            {/* <button onClick={browserHistory.goBack}>Back</button> */}\r\n            <div>\r\n                <Grid container align='left'>\r\n                <Link to=\"/\">\r\n                    Back to result\r\n                </Link>\r\n                </Grid>\r\n                <Divider/>\r\n                <br></br>\r\n                <Grid container spacing={space} >\r\n                    <Grid item  className={classes.gridImg} spacing={space} alignItems=\"center\">\r\n                    <Carousel  heightMode=\"current\">\r\n                    {                \r\n                        data.postImage != null ? data.postImage.map((tile) => (<img src={tile.img}/>)) : <p></p>\r\n                    }\r\n                    </Carousel>\r\n                    </Grid>\r\n                    <Grid item className={classes.gridItem} >\r\n                        <Typography gutterBottom variant=\"h6\" align=\"left\">{data.postTitle}</Typography>\r\n                        <Grid container spacing={space}>\r\n                            <Grid item className={classes.gridInItem}>\r\n                                \r\n                                <Typography color=\"textSecondary\" variant=\"body2\" align=\"left\">Seller: {data.postOwner}</Typography>\r\n                                <Typography color=\"textSecondary\" variant=\"body2\" align=\"left\">Price: {data.postPrice}</Typography>\r\n                            </Grid>\r\n                            <Grid item className={classes.gridInItem}>\r\n                                \r\n                                <Typography color=\"textSecondary\" variant=\"body2\" align=\"left\">Relaase: <Moment format=\"YYYY/MM/DD\">{data.postDate}</Moment></Typography>\r\n                                <Typography color=\"textSecondary\" variant=\"body2\" align=\"left\">Status: {data.postStatus}</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider/>\r\n                        <Grid item className={classes.gridItem} spacing={space}>\r\n                            <Typography color=\"textSecondary\" variant=\"body2\" align=\"left\">Condition: {data.postCondition}</Typography>\r\n\r\n                            <Typography color=\"textSecondary\" variant=\"body2\" align=\"left\">Transaction:{                \r\n                                data.transactionMethod != null ? data.transactionMethod.map((item) => (<a>&#9737; {item.transactionMethod} </a>)) : <p></p>\r\n                            }</Typography>\r\n                            <Typography color=\"textSecondary\" variant=\"body2\" align=\"left\">Delivery type:  \r\n                            {                \r\n                                data.deliveryType != null ? data.deliveryType.map((item) => (<a>&#9737; {item.deliveryType} </a>)) : <p></p>\r\n                            }</Typography>\r\n                        </Grid>\r\n                        <Divider/>\r\n                        <Grid item className={classes.gridItem} spacing={space}>\r\n                            <Typography color=\"textSecondary\" variant=\"body2\" align=\"left\">Description: {data.postDescription}</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Divider/>\r\n                <Grid container spacing={space}>\r\n                    <Grid item className={classes.gridImg} spacing={space}>\r\n                        <Typography gutterBottom variant=\"h6\" align=\"left\">Contact Info</Typography>\r\n                        <Typography color=\"textSecondary\" variant=\"body2\" align=\"left\">Email: {data.postEmail}</Typography>\r\n                        <Typography color=\"textSecondary\" variant=\"body2\" align=\"left\">Phone: {data.postPhone}</Typography>\r\n                        <Typography color=\"textSecondary\" variant=\"body2\" align=\"left\">Loaction: {data.postAddress} ZipCode:{data.postZipcode}</Typography>\r\n                    </Grid>\r\n                    <Grid item className={classes.gridItem} spacing={space}>\r\n                         {/* <MapComponent></MapComponent> */}\r\n                    </Grid>\r\n                </Grid> \r\n            </div>\r\n    \r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}