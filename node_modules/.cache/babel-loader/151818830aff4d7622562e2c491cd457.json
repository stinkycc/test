{"ast":null,"code":"import { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Stink\\\\Documents\\\\GitHub\\\\OneMoreSale\\\\frontend\\\\src\\\\item\\\\Item.js\",\n    _s = $RefreshSig$(),\n    _s2 = $RefreshSig$();\n\nimport React, { Component } from 'react';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Container from '@material-ui/core/Container';\nimport { useState, useEffect } from 'react';\nimport Typography from '@material-ui/core/Typography';\nimport Carousel from 'nuka-carousel';\nimport { Link } from \"react-router-dom\"; //import AliceCarousel from 'react-alice-carousel';\n\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\nconst containerStyle = {\n  width: '100%',\n  height: '200px'\n};\nconst center = {\n  lat: 37,\n  lng: -121\n};\n\nfunction MapComponent() {\n  _s();\n\n  const [map, setMap] = React.useState(null);\n  const onLoad = React.useCallback(function callback(map) {\n    const bounds = new window.google.maps.LatLngBounds();\n    map.fitBounds(bounds);\n    setMap(map);\n  }, []);\n  const onUnmount = React.useCallback(function callback(map) {\n    setMap(null);\n  }, []);\n  return /*#__PURE__*/_jsxDEV(LoadScript, {\n    googleMapsApiKey: \"AIzaSyDhvKaFteSG7EhPIskgB_6LUlmZOIoTH20\",\n    children: /*#__PURE__*/_jsxDEV(GoogleMap, {\n      mapContainerStyle: containerStyle,\n      center: center,\n      zoom: 10,\n      onLoad: onLoad,\n      onUnmount: onUnmount,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {}, void 0, false)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 7\n  }, this);\n}\n\n_s(MapComponent, \"cOX+qz8P8Qlgqf5uFzYTRAoc4/c=\");\n\n_c = MapComponent;\n\n/*#__PURE__*/\nReact.memo(MapComponent);\n\nconst AnyReactComponent = ({\n  text\n}) => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: text\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 55,\n  columnNumber: 41\n}, this);\n\n_c2 = AnyReactComponent;\nconst API_ROOT = 'https://my-json-server.typicode.com/stinkycc/SHMTest';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%',\n    flexGrow: 1\n  },\n  gridItem: {\n    marginTop: 3,\n    marginBottom: 1,\n    width: '60%'\n  },\n  gridInItem: {\n    marginTop: 2,\n    marginBottom: 1,\n    width: '50%'\n  },\n  gridImg: {\n    marginTop: 5,\n    marginBottom: 3,\n    width: '40%'\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    transform: 'translateZ(0)'\n  },\n  title: {\n    variant: 'h4',\n    align: 'left'\n  },\n  carousel: {\n    margin: theme.spacing(2)\n  },\n  item: {\n    color: 'textSecondary',\n    variant: 'body2',\n    align: 'left'\n  }\n}));\n\nfunction getItems(setItems) {\n  fetch(`${API_ROOT}/post`, {\n    method: 'GET'\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    throw new Error('Failed to load post');\n  }).then(data => {\n    setItems(data);\n  }).catch(e => {\n    console.error(e);\n  });\n}\n\nexport default function Item() {\n  _s2();\n\n  const [post, setPost] = useState(\"\");\n  const deliverytypes = \"\";\n  const classes = useStyles();\n  const space = 5;\n  useEffect(() => {\n    getItems(setPost);\n\n    if (post.deliverytypes != null) {\n      for (let item of post.deliverytypes) {\n        deliverytypes += \"&#9737; \" + item.deliverytype + \" \";\n      }\n    }\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"l\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        align: \"left\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          to: \"/\",\n          children: \"Back to result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 17\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: space,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.gridImg,\n          spacing: space,\n          alignItems: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Carousel, {\n            heightMode: \"current\",\n            children: post.imgs != null ? post.imgs.map(tile => /*#__PURE__*/_jsxDEV(\"img\", {\n              src: tile.img\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 70\n            }, this)) : /*#__PURE__*/_jsxDEV(\"p\", {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 96\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.gridItem,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            align: \"left\",\n            children: post.title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: space,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              className: classes.gridInItem,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body2\",\n                align: \"left\",\n                children: [\"Seller: \", post.user]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body2\",\n                align: \"left\",\n                children: [\"Price: \", post.price]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              className: classes.gridInItem,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body2\",\n                align: \"left\",\n                children: [\"Relaase: \", post.data]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                color: \"textSecondary\",\n                variant: \"body2\",\n                align: \"left\",\n                children: [\"Status: \", post.status]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            className: classes.gridItem,\n            spacing: space,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body2\",\n              align: \"left\",\n              children: [\"Condition: \", post.condition]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 160,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body2\",\n              align: \"left\",\n              children: \"Transaction: \\u2609 cash\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body2\",\n              align: \"left\",\n              children: [\"Delivery typ: \", deliverytypes, \"}\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 159,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            className: classes.gridItem,\n            spacing: space,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              color: \"textSecondary\",\n              variant: \"body2\",\n              align: \"left\",\n              children: [\"Description: \", post.description]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 170,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: space,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.gridImg,\n          spacing: space,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            align: \"left\",\n            children: \"Contact Info\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"body2\",\n            align: \"left\",\n            children: [\"Email: \", post.email]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"body2\",\n            align: \"left\",\n            children: [\"Phone: \", post.phone]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            color: \"textSecondary\",\n            variant: \"body2\",\n            align: \"left\",\n            children: [\"Loaction: \", post.address, \" ZipCode:\", post.zipcodes]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.gridItem,\n          spacing: space,\n          children: /*#__PURE__*/_jsxDEV(MapComponent, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 9\n  }, this);\n}\n\n_s2(Item, \"EZaFVcCJNF+CnxotJ8UHGGlgMXc=\", false, function () {\n  return [useStyles];\n});\n\n_c3 = Item;\n\nvar _c, _c2, _c3;\n\n$RefreshReg$(_c, \"MapComponent\");\n$RefreshReg$(_c2, \"AnyReactComponent\");\n$RefreshReg$(_c3, \"Item\");","map":{"version":3,"sources":["C:/Users/Stink/Documents/GitHub/OneMoreSale/frontend/src/item/Item.js"],"names":["React","Component","makeStyles","Grid","Divider","Container","useState","useEffect","Typography","Carousel","Link","GoogleMap","LoadScript","containerStyle","width","height","center","lat","lng","MapComponent","map","setMap","onLoad","useCallback","callback","bounds","window","google","maps","LatLngBounds","fitBounds","onUnmount","memo","AnyReactComponent","text","API_ROOT","useStyles","theme","root","maxWidth","flexGrow","gridItem","marginTop","marginBottom","gridInItem","gridImg","gridList","flexWrap","transform","title","variant","align","carousel","margin","spacing","item","color","getItems","setItems","fetch","method","then","response","ok","json","Error","data","catch","e","console","error","Item","post","setPost","deliverytypes","classes","space","deliverytype","imgs","tile","img","user","price","status","condition","description","email","phone","address","zipcodes"],"mappings":"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","sourcesContent":["import React, { Component } from 'react'\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Container from '@material-ui/core/Container';\r\nimport {useState, useEffect} from 'react';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Carousel from 'nuka-carousel';\r\nimport { Link } from \"react-router-dom\";\r\n//import AliceCarousel from 'react-alice-carousel';\r\nimport { GoogleMap, LoadScript } from '@react-google-maps/api';\r\n\r\nconst containerStyle = {\r\n    width: '100%',\r\n    height: '200px'\r\n  };\r\n   \r\n  const center = {\r\n    lat: 37,\r\n    lng: -121\r\n  };\r\n   \r\nfunction MapComponent() {\r\n    const [map, setMap] = React.useState(null)\r\n   \r\n    const onLoad = React.useCallback(function callback(map) {\r\n      const bounds = new window.google.maps.LatLngBounds();\r\n      map.fitBounds(bounds);\r\n      setMap(map)\r\n    }, [])\r\n   \r\n    const onUnmount = React.useCallback(function callback(map) {\r\n      setMap(null)\r\n    }, [])\r\n   \r\n    return (\r\n      <LoadScript\r\n        googleMapsApiKey=\"AIzaSyDhvKaFteSG7EhPIskgB_6LUlmZOIoTH20\"\r\n      >\r\n        <GoogleMap\r\n          mapContainerStyle={containerStyle}\r\n          center={center}\r\n          zoom={10}\r\n          onLoad={onLoad}\r\n          onUnmount={onUnmount}\r\n        >\r\n          { /* Child components, such as markers, info windows, etc. */ }\r\n          <></>\r\n        </GoogleMap>\r\n      </LoadScript>\r\n    )\r\n  }\r\nReact.memo(MapComponent)\r\n\r\nconst AnyReactComponent = ({ text }) => <div>{text}</div>;\r\nconst API_ROOT = 'https://my-json-server.typicode.com/stinkycc/SHMTest'\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n        width: '100%',\r\n        maxWidth: '100%',\r\n        flexGrow:1,\r\n    },\r\n    gridItem:{\r\n        marginTop:3,\r\n        marginBottom:1,\r\n        width:'60%',\r\n    },\r\n    gridInItem:{\r\n        marginTop:2,\r\n        marginBottom:1,\r\n        width:'50%',\r\n    },\r\n    gridImg:{\r\n        marginTop:5,\r\n        marginBottom:3,\r\n        width:'40%',\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        transform: 'translateZ(0)',\r\n    },\r\n    title:{\r\n        variant:'h4',\r\n        align:'left',\r\n    },\r\n    carousel: {\r\n        margin: theme.spacing(2),\r\n    },\r\n    item:{\r\n        color:'textSecondary',\r\n        variant:'body2',\r\n        align:'left',\r\n    }\r\n}));\r\n\r\nfunction getItems(setItems) {\r\n    fetch(`${API_ROOT}/post`, {\r\n        method: 'GET',\r\n    })\r\n        .then((response) => {\r\n            if (response.ok) {\r\n                return response.json();\r\n            }\r\n            throw new Error('Failed to load post');\r\n        })\r\n        .then(data => {\r\n            setItems(data);\r\n        }).catch((e) => {\r\n        console.error(e);\r\n    });\r\n}\r\nexport default function Item() {\r\n    const[post, setPost] = useState(\"\");\r\n    const deliverytypes = \"\";\r\n    const classes = useStyles();\r\n    const space = 5;\r\n    useEffect(() => {\r\n        getItems(setPost);\r\n        if(post.deliverytypes != null){\r\n             for(let item of post.deliverytypes){\r\n                deliverytypes +=\"&#9737; \" + item.deliverytype + \" \";\r\n             }\r\n        }\r\n    });\r\n\r\n    \r\n    return (\r\n        <Container component=\"main\" maxWidth=\"l\">\r\n            <div >\r\n                <Grid container align='left'>\r\n                <Link to=\"/\">\r\n                    Back to result\r\n                </Link>\r\n                </Grid>\r\n                <Divider/>\r\n                <br></br>\r\n                <Grid container spacing={space} >\r\n                    <Grid item  className={classes.gridImg} spacing={space} alignItems=\"center\">\r\n                    <Carousel  heightMode=\"current\">\r\n                    {                \r\n                        post.imgs != null ? post.imgs.map((tile) => (<img src={tile.img}/>)) : <p></p>\r\n                    }\r\n                    </Carousel>\r\n                    </Grid>\r\n                    <Grid item className={classes.gridItem} >\r\n                        <Typography gutterBottom variant=\"h6\" align=\"left\">{post.title}</Typography>\r\n                        <Grid container spacing={space}>\r\n                            <Grid item className={classes.gridInItem}>\r\n                                \r\n                                <Typography color=\"textSecondary\" variant=\"body2\" align=\"left\">Seller: {post.user}</Typography>\r\n                                <Typography color=\"textSecondary\" variant=\"body2\" align=\"left\">Price: {post.price}</Typography>\r\n                            </Grid>\r\n                            <Grid item className={classes.gridInItem}>\r\n                                <Typography color=\"textSecondary\" variant=\"body2\" align=\"left\">Relaase: {post.data}</Typography>\r\n                                <Typography color=\"textSecondary\" variant=\"body2\" align=\"left\">Status: {post.status}</Typography>\r\n                            </Grid>\r\n                        </Grid>\r\n                        <Divider/>\r\n                        <Grid item className={classes.gridItem} spacing={space}>\r\n                            <Typography color=\"textSecondary\" variant=\"body2\" align=\"left\">Condition: {post.condition}</Typography>\r\n                            <Typography color=\"textSecondary\" variant=\"body2\" align=\"left\">Transaction: &#9737; cash</Typography>\r\n                            <Typography color=\"textSecondary\" variant=\"body2\" align=\"left\">Delivery typ: {deliverytypes}}</Typography>\r\n                        </Grid>\r\n                        <Divider/>\r\n                        <Grid item className={classes.gridItem} spacing={space}>\r\n                            <Typography color=\"textSecondary\" variant=\"body2\" align=\"left\">Description: {post.description}</Typography>\r\n                        </Grid>\r\n                    </Grid>\r\n                </Grid>\r\n                <Divider/>\r\n                <Grid container spacing={space}>\r\n                    <Grid item className={classes.gridImg} spacing={space}>\r\n                        <Typography gutterBottom variant=\"h6\" align=\"left\">Contact Info</Typography>\r\n                        <Typography color=\"textSecondary\" variant=\"body2\" align=\"left\">Email: {post.email}</Typography>\r\n                        <Typography color=\"textSecondary\" variant=\"body2\" align=\"left\">Phone: {post.phone}</Typography>\r\n                        <Typography color=\"textSecondary\" variant=\"body2\" align=\"left\">Loaction: {post.address} ZipCode:{post.zipcodes}</Typography>\r\n                    </Grid>\r\n                    <Grid item className={classes.gridItem} spacing={space}>\r\n                        <MapComponent></MapComponent>\r\n                    </Grid>\r\n                </Grid>\r\n            \r\n    \r\n            </div>\r\n\r\n        </Container>\r\n\r\n    );\r\n}\r\n\r\n"]},"metadata":{},"sourceType":"module"}