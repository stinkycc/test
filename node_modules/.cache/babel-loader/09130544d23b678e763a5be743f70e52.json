{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Stink\\\\Documents\\\\GitHub\\\\OneMoreSale\\\\frontend\\\\src\\\\item\\\\Item.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { makeStyles } from '@material-ui/core/styles';\nimport Grid from '@material-ui/core/Grid';\nimport Divider from '@material-ui/core/Divider';\nimport Link from '@material-ui/core/Link';\nimport Container from '@material-ui/core/Container';\nimport GridList from '@material-ui/core/GridList';\nimport GridListTile from '@material-ui/core/GridListTile';\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\nimport IconButton from '@material-ui/core/IconButton';\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\nimport { API_ROOT } from \"../constants\";\nimport { useState, useEffect } from 'react';\nconst useStyles = makeStyles(theme => ({\n  root: {\n    width: '100%',\n    maxWidth: '100%'\n  },\n  gridList: {\n    flexWrap: 'nowrap',\n    // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\n    transform: 'translateZ(0)'\n  },\n  title: {\n    color: theme.palette.primary.light\n  },\n  titleBar: {\n    background: 'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)'\n  }\n}));\n\nfunction getItems(setItems) {\n  fetch(`${API_ROOT}/post`, {\n    method: 'GET'\n  }).then(response => {\n    if (response.ok) {\n      return response.json();\n    }\n\n    throw new Error('Failed to load post');\n  }).then(data => {\n    setItems(data);\n  }).catch(e => {\n    console.error(e);\n  });\n}\n\nexport default function Item() {\n  _s();\n\n  const [post, setPost] = useState([]);\n  const [imgs, setImgs] = useState([]);\n  const classes = useStyles();\n  useEffect(() => {\n    getItems(setPost);\n    setImgs(post.imgs);\n  });\n  return /*#__PURE__*/_jsxDEV(Container, {\n    component: \"main\",\n    maxWidth: \"l\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          component: \"button\",\n          onClick: () => {\n            getItems(setPost);\n          },\n          children: \"Back to result\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        variant: \"middle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h6\", {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(GridList, {\n        className: classes.gridList,\n        cols: 2.5,\n        children: imgs.map(tile => /*#__PURE__*/_jsxDEV(GridListTile, {\n          children: [/*#__PURE__*/_jsxDEV(\"img\", {\n            src: tile.img\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(GridListTileBar, {\n            classes: {\n              root: classes.titleBar,\n              title: classes.title\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 25\n          }, this)]\n        }, tile.img, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 21\n        }, this))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 9\n  }, this);\n}\n\n_s(Item, \"0YqQUit9SofVN+hFvQ6hbngEP+0=\", false, function () {\n  return [useStyles];\n});\n\n_c = Item;\n\nvar _c;\n\n$RefreshReg$(_c, \"Item\");","map":{"version":3,"sources":["C:/Users/Stink/Documents/GitHub/OneMoreSale/frontend/src/item/Item.js"],"names":["React","makeStyles","Grid","Divider","Link","Container","GridList","GridListTile","GridListTileBar","IconButton","StarBorderIcon","API_ROOT","useState","useEffect","useStyles","theme","root","width","maxWidth","gridList","flexWrap","transform","title","color","palette","primary","light","titleBar","background","getItems","setItems","fetch","method","then","response","ok","json","Error","data","catch","e","console","error","Item","post","setPost","imgs","setImgs","classes","map","tile","img"],"mappings":"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","sourcesContent":["import React from \"react\";\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Divider from '@material-ui/core/Divider';\r\nimport Link from '@material-ui/core/Link';\r\nimport Container from '@material-ui/core/Container';\r\nimport GridList from '@material-ui/core/GridList';\r\nimport GridListTile from '@material-ui/core/GridListTile';\r\nimport GridListTileBar from '@material-ui/core/GridListTileBar';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport StarBorderIcon from '@material-ui/icons/StarBorder';\r\nimport {API_ROOT} from \"../constants\";\r\nimport {useState, useEffect} from 'react';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n    root: {\r\n      width: '100%',\r\n      maxWidth: '100%',\r\n    },\r\n    gridList: {\r\n        flexWrap: 'nowrap',\r\n        // Promote the list into his own layer on Chrome. This cost memory but helps keeping high FPS.\r\n        transform: 'translateZ(0)',\r\n      },\r\n      title: {\r\n        color: theme.palette.primary.light,\r\n      },\r\n      titleBar: {\r\n        background:\r\n          'linear-gradient(to top, rgba(0,0,0,0.7) 0%, rgba(0,0,0,0.3) 70%, rgba(0,0,0,0) 100%)',\r\n      },\r\n    }));\r\n\r\n    function getItems(setItems) {\r\n        fetch(`${API_ROOT}/post`, {\r\n            method: 'GET',\r\n        })\r\n            .then((response) => {\r\n                if (response.ok) {\r\n                    return response.json();\r\n                }\r\n                throw new Error('Failed to load post');\r\n            })\r\n            .then(data => {\r\n                setItems(data);\r\n            }).catch((e) => {\r\n            console.error(e);\r\n        });\r\n    }\r\nexport default function Item() {\r\n    const [post, setPost] = useState([]);\r\n    const [imgs, setImgs] = useState([]);\r\n    const classes = useStyles();\r\n    useEffect(() => {\r\n        getItems(setPost);\r\n        setImgs(post.imgs);\r\n    });\r\n    return (\r\n        <Container component=\"main\" maxWidth=\"l\">\r\n            <div >\r\n                <Grid container alignItems=\"center\">\r\n                    <Link\r\n                        component=\"button\"\r\n                        onClick={() => {\r\n                            getItems(setPost);\r\n                        }}\r\n                    >\r\n                        Back to result\r\n                    </Link>\r\n                </Grid>\r\n                <Divider variant=\"middle\" /> \r\n                <h6></h6>\r\n                <GridList className={classes.gridList} cols={2.5}>\r\n                    {\r\n                    imgs.map((tile) => (\r\n                    <GridListTile key={tile.img}>\r\n                        <img src={tile.img}/>\r\n                        <GridListTileBar\r\n                        classes={{\r\n                            root: classes.titleBar,\r\n                            title: classes.title,\r\n                        }}\r\n                        \r\n                />\r\n          </GridListTile>\r\n        ))}\r\n      </GridList>\r\n            </div>\r\n        \r\n        </Container>\r\n     \r\n    );\r\n}"]},"metadata":{},"sourceType":"module"}