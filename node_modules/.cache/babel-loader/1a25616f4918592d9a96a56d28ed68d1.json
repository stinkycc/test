{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Stink\\\\Documents\\\\GitHub\\\\OneMoreSale\\\\frontend\\\\src\\\\chat\\\\ChatRoom.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useHistory, useParams } from \"react-router-dom\";\nimport { Container, Row, Col, Card, CardBody, CardSubtitle, Button, Form, InputGroup, Input, InputGroupAddon } from 'reactstrap';\nimport Moment from 'moment';\nimport firebase from './Firebase';\nimport ScrollToBottom from 'react-scroll-to-bottom';\nimport './Styles.css';\n\nfunction ChatRoom() {\n  _s();\n\n  const [chats, setChats] = useState([]);\n  const [users, setUsers] = useState([]);\n  const [nickname, setNickname] = useState('');\n  const [roomname, setRoomname] = useState('');\n  const [newchat, setNewchat] = useState({\n    roomname: '',\n    nickname: '',\n    message: '',\n    date: '',\n    type: ''\n  });\n  const history = useHistory();\n  const {\n    room\n  } = useParams();\n  useEffect(() => {\n    const fetchData = async () => {\n      setNickname(localStorage.getItem('nickname'));\n      setRoomname(room);\n      firebase.database().ref('chats/').orderByChild('roomname').equalTo(roomname).on('value', resp => {\n        setChats([]);\n        setChats(snapshotToArray(resp));\n      });\n    };\n\n    fetchData();\n  }, [room, roomname]);\n  useEffect(() => {\n    const fetchData = async () => {\n      setNickname(localStorage.getItem('nickname'));\n      setRoomname(room);\n      firebase.database().ref('roomusers/').orderByChild('roomname').equalTo(roomname).on('value', resp2 => {\n        setUsers([]);\n        const roomusers = snapshotToArray(resp2);\n        setUsers(roomusers.filter(x => x.status === 'online'));\n      });\n    };\n\n    fetchData();\n  }, [room, roomname]);\n\n  const snapshotToArray = snapshot => {\n    const returnArr = [];\n    snapshot.forEach(childSnapshot => {\n      const item = childSnapshot.val();\n      item.key = childSnapshot.key;\n      returnArr.push(item);\n    });\n    return returnArr;\n  };\n\n  const submitMessage = e => {\n    e.preventDefault();\n    const chat = newchat;\n    chat.roomname = roomname;\n    chat.nickname = nickname;\n    chat.date = Moment(new Date()).format('DD/MM/YYYY HH:mm:ss');\n    chat.type = 'message';\n    const newMessage = firebase.database().ref('chats/').push();\n    newMessage.set(chat);\n    setNewchat({\n      roomname: '',\n      nickname: '',\n      message: '',\n      date: '',\n      type: ''\n    });\n  };\n\n  const onChange = e => {\n    e.persist();\n    setNewchat({ ...newchat,\n      [e.target.name]: e.target.value\n    });\n  };\n\n  const exitChat = e => {\n    const chat = {\n      roomname: '',\n      nickname: '',\n      message: '',\n      date: '',\n      type: ''\n    };\n    chat.roomname = roomname;\n    chat.nickname = nickname;\n    chat.date = Moment(new Date()).format('DD/MM/YYYY HH:mm:ss');\n    chat.message = `${nickname} leave the room`;\n    chat.type = 'exit';\n    const newMessage = firebase.database().ref('chats/').push();\n    newMessage.set(chat);\n    firebase.database().ref('roomusers/').orderByChild('roomname').equalTo(roomname).once('value', resp => {\n      let roomuser = [];\n      roomuser = snapshotToArray(resp);\n      const user = roomuser.find(x => x.nickname === nickname);\n\n      if (user !== undefined) {\n        const userRef = firebase.database().ref('roomusers/' + user.key);\n        userRef.update({\n          status: 'offline'\n        });\n      }\n    });\n    history.goBack();\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"Container\",\n    children: /*#__PURE__*/_jsxDEV(Container, {\n      children: /*#__PURE__*/_jsxDEV(Row, {\n        children: [/*#__PURE__*/_jsxDEV(Col, {\n          xs: \"4\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: [/*#__PURE__*/_jsxDEV(Card, {\n              className: \"UsersCard\",\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: /*#__PURE__*/_jsxDEV(CardSubtitle, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    type: \"button\",\n                    onClick: () => {\n                      exitChat();\n                    },\n                    children: \"Exit Chat\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 37\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 29\n            }, this), users.map((item, idx) => /*#__PURE__*/_jsxDEV(Card, {\n              className: \"UsersCard\",\n              children: /*#__PURE__*/_jsxDEV(CardBody, {\n                children: /*#__PURE__*/_jsxDEV(CardSubtitle, {\n                  children: item.nickname\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 130,\n                  columnNumber: 41\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 129,\n                columnNumber: 37\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 33\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 25\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Col, {\n          xs: \"8\",\n          children: [/*#__PURE__*/_jsxDEV(ScrollToBottom, {\n            className: \"ChatContent\",\n            children: chats.map((item, idx) => /*#__PURE__*/_jsxDEV(\"div\", {\n              className: \"MessageBox\",\n              children: item.type === 'join' || item.type === 'exit' ? /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ChatStatus\",\n                children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ChatDate\",\n                  children: item.date\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 45\n                }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: \"ChatContentCenter\",\n                  children: item.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 45\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 41\n              }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n                className: \"ChatMessage\",\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: `${item.nickname === nickname ? \"RightBubble\" : \"LeftBubble\"}`,\n                  children: [item.nickname === nickname ? /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"MsgName\",\n                    children: \"Me\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 49\n                  }, this) : /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"MsgName\",\n                    children: item.nickname\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 85\n                  }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                    className: \"MsgDate\",\n                    children: [\" at \", item.date]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 45\n                  }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                    children: item.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 45\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 41\n              }, this)\n            }, idx, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 33\n            }, this))\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(\"footer\", {\n            className: \"StickyFooter\",\n            children: /*#__PURE__*/_jsxDEV(Form, {\n              className: \"MessageForm\",\n              onSubmit: submitMessage,\n              children: /*#__PURE__*/_jsxDEV(InputGroup, {\n                children: [/*#__PURE__*/_jsxDEV(Input, {\n                  type: \"text\",\n                  name: \"message\",\n                  id: \"message\",\n                  placeholder: \"Enter message here\",\n                  value: newchat.message,\n                  onChange: onChange\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 33\n                }, this), /*#__PURE__*/_jsxDEV(InputGroupAddon, {\n                  addonType: \"append\",\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    variant: \"primary\",\n                    type: \"submit\",\n                    children: \"Send\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 41\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 37\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 33\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 29\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n_s(ChatRoom, \"SJWxSAGmcQf25HrAr+Z135A15CI=\", false, function () {\n  return [useHistory, useParams];\n});\n\n_c = ChatRoom;\nexport default ChatRoom;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChatRoom\");","map":{"version":3,"sources":["C:/Users/Stink/Documents/GitHub/OneMoreSale/frontend/src/chat/ChatRoom.js"],"names":["React","useState","useEffect","useHistory","useParams","Container","Row","Col","Card","CardBody","CardSubtitle","Button","Form","InputGroup","Input","InputGroupAddon","Moment","firebase","ScrollToBottom","ChatRoom","chats","setChats","users","setUsers","nickname","setNickname","roomname","setRoomname","newchat","setNewchat","message","date","type","history","room","fetchData","localStorage","getItem","database","ref","orderByChild","equalTo","on","resp","snapshotToArray","resp2","roomusers","filter","x","status","snapshot","returnArr","forEach","childSnapshot","item","val","key","push","submitMessage","e","preventDefault","chat","Date","format","newMessage","set","onChange","persist","target","name","value","exitChat","once","roomuser","user","find","undefined","userRef","update","goBack","map","idx"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport {\r\n    useHistory,\r\n    useParams\r\n  } from \"react-router-dom\";\r\nimport {\r\n    Container, \r\n    Row, \r\n    Col,\r\n    Card,\r\n    CardBody,\r\n    CardSubtitle,\r\n    Button,\r\n    Form,\r\n    InputGroup,\r\n    Input,\r\n    InputGroupAddon\r\n} from 'reactstrap';\r\nimport Moment from 'moment';\r\nimport firebase from './Firebase';\r\nimport ScrollToBottom from 'react-scroll-to-bottom';\r\nimport './Styles.css';\r\n\r\nfunction ChatRoom() {\r\n    const [chats, setChats] = useState([]);\r\n    const [users, setUsers] = useState([]);\r\n    const [nickname, setNickname] = useState('');\r\n    const [roomname, setRoomname] = useState('');\r\n    const [newchat, setNewchat] = useState({ roomname: '', nickname: '', message: '', date: '', type: '' });\r\n    const history = useHistory();\r\n    const { room } = useParams();\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setNickname(localStorage.getItem('nickname'));\r\n            setRoomname(room);\r\n            firebase.database().ref('chats/').orderByChild('roomname').equalTo(roomname).on('value', resp => {\r\n              setChats([]);\r\n              setChats(snapshotToArray(resp));\r\n            });\r\n        };\r\n      \r\n        fetchData();\r\n    }, [room, roomname]);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async () => {\r\n            setNickname(localStorage.getItem('nickname'));\r\n            setRoomname(room);\r\n            firebase.database().ref('roomusers/').orderByChild('roomname').equalTo(roomname).on('value', (resp2) => {\r\n              setUsers([]);\r\n              const roomusers = snapshotToArray(resp2);\r\n              setUsers(roomusers.filter(x => x.status === 'online'));\r\n            });\r\n        };\r\n      \r\n        fetchData();\r\n    }, [room, roomname]);\r\n\r\n    const snapshotToArray = (snapshot) => {\r\n        const returnArr = [];\r\n\r\n        snapshot.forEach((childSnapshot) => {\r\n            const item = childSnapshot.val();\r\n            item.key = childSnapshot.key;\r\n            returnArr.push(item);\r\n        });\r\n\r\n        return returnArr;\r\n    }\r\n\r\n    const submitMessage = (e) => {\r\n        e.preventDefault();\r\n        const chat = newchat;\r\n        chat.roomname = roomname;\r\n        chat.nickname = nickname;\r\n        chat.date = Moment(new Date()).format('DD/MM/YYYY HH:mm:ss');\r\n        chat.type = 'message';\r\n        const newMessage = firebase.database().ref('chats/').push();\r\n        newMessage.set(chat);\r\n        setNewchat({ roomname: '', nickname: '', message: '', date: '', type: '' });\r\n    };\r\n\r\n    const onChange = (e) => {\r\n        e.persist();\r\n        setNewchat({...newchat, [e.target.name]: e.target.value});\r\n    }\r\n\r\n    const exitChat = (e) => {\r\n        const chat = { roomname: '', nickname: '', message: '', date: '', type: '' };\r\n        chat.roomname = roomname;\r\n        chat.nickname = nickname;\r\n        chat.date = Moment(new Date()).format('DD/MM/YYYY HH:mm:ss');\r\n        chat.message = `${nickname} leave the room`;\r\n        chat.type = 'exit';\r\n        const newMessage = firebase.database().ref('chats/').push();\r\n        newMessage.set(chat);\r\n    \r\n        firebase.database().ref('roomusers/').orderByChild('roomname').equalTo(roomname).once('value', (resp) => {\r\n          let roomuser = [];\r\n          roomuser = snapshotToArray(resp);\r\n          const user = roomuser.find(x => x.nickname === nickname);\r\n          if (user !== undefined) {\r\n            const userRef = firebase.database().ref('roomusers/' + user.key);\r\n            userRef.update({status: 'offline'});\r\n          }\r\n        });\r\n    \r\n        history.goBack();\r\n    }\r\n\r\n    return (\r\n        <div className=\"Container\">\r\n            <Container>\r\n                <Row>\r\n                    <Col xs=\"4\">\r\n                        <div>\r\n                            <Card className=\"UsersCard\">\r\n                                <CardBody>\r\n                                    <CardSubtitle>\r\n                                        <Button variant=\"primary\" type=\"button\" onClick={() => { exitChat() }}>\r\n                                            Exit Chat\r\n                                        </Button>\r\n                                    </CardSubtitle>\r\n                                </CardBody>\r\n                            </Card>\r\n                            {users.map((item, idx) => (\r\n                                <Card key={idx} className=\"UsersCard\">\r\n                                    <CardBody>\r\n                                        <CardSubtitle>{item.nickname}</CardSubtitle>\r\n                                    </CardBody>\r\n                                </Card>\r\n                            ))}\r\n                        </div>\r\n                    </Col>\r\n                    <Col xs=\"8\">\r\n                        <ScrollToBottom className=\"ChatContent\">\r\n                            {chats.map((item, idx) => (\r\n                                <div key={idx} className=\"MessageBox\">\r\n                                    {item.type ==='join'||item.type === 'exit'?\r\n                                        <div className=\"ChatStatus\">\r\n                                            <span className=\"ChatDate\">{item.date}</span>\r\n                                            <span className=\"ChatContentCenter\">{item.message}</span>\r\n                                        </div>:\r\n                                        <div className=\"ChatMessage\">\r\n                                            <div className={`${item.nickname === nickname? \"RightBubble\":\"LeftBubble\"}`}>\r\n                                            {item.nickname === nickname ? \r\n                                                <span className=\"MsgName\">Me</span>:<span className=\"MsgName\">{item.nickname}</span>\r\n                                            }\r\n                                            <span className=\"MsgDate\"> at {item.date}</span>\r\n                                            <p>{item.message}</p>\r\n                                            </div>\r\n                                        </div>\r\n                                    }\r\n                                </div>\r\n                            ))}\r\n                        </ScrollToBottom>\r\n                        <footer className=\"StickyFooter\">\r\n                            <Form className=\"MessageForm\" onSubmit={submitMessage}>\r\n                                <InputGroup>\r\n                                <Input type=\"text\" name=\"message\" id=\"message\" placeholder=\"Enter message here\" value={newchat.message} onChange={onChange} />\r\n                                    <InputGroupAddon addonType=\"append\">\r\n                                        <Button variant=\"primary\" type=\"submit\">Send</Button>\r\n                                    </InputGroupAddon>\r\n                                </InputGroup>\r\n                            </Form>\r\n                        </footer>\r\n                    </Col>\r\n                </Row>\r\n            </Container>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default ChatRoom;"]},"metadata":{},"sourceType":"module"}