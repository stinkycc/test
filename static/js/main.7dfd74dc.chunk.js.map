{"version":3,"sources":["assets/images/nba-logoman-word-white.svg","nba-client.js","constants.js","components/Profile.js","components/ShotChart.js","components/CounterSlider.js","components/DataViewContainer.js","components/SearchBar.js","components/Main.js","components/TopNavBar.js","components/App.js","serviceWorker.js","index.js"],"names":["module","exports","nba","stats","playerInfo","PlayerID","fetch","then","res","json","shots","PROFILE_PIC_URL_PREFIX","DEFAULT_PLAYER_INFO","playerId","fullName","teamAbbreviation","Profile","this","props","teamCity","teamName","playerName","height","weight","pts","reb","ast","pie","className","src","alt","Component","window","d3_hexbin","hexbin","ShotChart","response","final_shots","shot_Chart_Detail","map","shot","x","locX","y","locY","action_type","actionType","shot_distance","shotDistance","shot_made_flag","shotMadeFlag","courtSelection","d3","html","chart_court","court","width","chart_shots","shotRenderThreshold","minCount","displayToolTips","displayTooltip","displayType","chartType","call","datum","id","React","CounterSlider","state","inputValue","value","onChange","cleanValue","Number","setState","onCountSliderChange","span","min","max","style","marginLeft","DataViewContainer","count","onChartTypeChange","e","target","onTooltipChange","_","debounce","Group","checkedChildren","unCheckedChildren","defaultChecked","Option","AutoComplete","SearchBar","dataSource","handleSearch","players","searchPlayers","console","log","player","onSelect","name","handleSelectPlayer","options","key","onSearch","placeholder","size","optionLabelProp","suffix","type","Main","loadPlayerInfo","findPlayer","info","playInfo","Object","assign","commonPlayerInfo","playerHeadlineStats","TopNavBar","logo","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7dfd74dc.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/nba-logoman-word-white.9470e2d5.svg\";","import nba from 'nba';\r\nconst SERVER_URL = 'https://nba.laiprojects.com';\r\n//const SERVER_URL = 'http://35.235.84.235:5000';\r\n//http://nba.laiprojects.com\r\n\r\nexport default {\r\n    ...nba,\r\n    stats: {\r\n        ...nba.stats,\r\n        playerInfo: function({ PlayerID }) {\r\n            return fetch(`${SERVER_URL}/players/${PlayerID}`).then(res => res.json())\r\n        },\r\n        shots: function({ PlayerID }) {\r\n            return fetch(`${SERVER_URL}/players/${PlayerID}/shots`).then(res => res.json())\r\n        },\r\n    },\r\n}","export const PROFILE_PIC_URL_PREFIX = 'https://ak-static.cms.nba.com/wp-content/uploads/headshots/nba/latest/260x190';\r\nexport const TEAM_PIC_URL_PREFIX = 'https://stats.nba.com/media/img/teams/logos';\r\nexport const DEFAULT_PLAYER_INFO = {\r\n    playerId: 201939,\r\n    fullName: 'Stephen Curry',\r\n    teamAbbreviation: 'GSW',\r\n};","import React, {Component} from 'react';\r\nimport { PROFILE_PIC_URL_PREFIX, TEAM_PIC_URL_PREFIX } from '../constants';\r\n\r\nclass Profile extends Component {\r\n    render() {\r\n        const{\r\n            teamAbbreviation,\r\n            teamCity,\r\n            teamName,\r\n            playerName,\r\n            height,\r\n            weight,\r\n            playerId,\r\n            pts, reb, ast, pie,\r\n        } = this.props.playerInfo;\r\n        return (\r\n            <div className=\"profile\">\r\n                <div className=\"profile-entry player-name\">\r\n                    {playerName}\r\n                </div>\r\n                <img\r\n                    className=\"profile-pic\"\r\n                    src={`${PROFILE_PIC_URL_PREFIX}/${playerId}.png`}\r\n                    alt=\"Profile\"\r\n                />\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">Team</div>\r\n                    <div className=\"profile-entry-right\">{`${teamCity} ${teamName}`}</div>\r\n                </div>\r\n                <img\r\n                    className=\"team-logo\"\r\n                    src={`${TEAM_PIC_URL_PREFIX}/${teamAbbreviation}_logo.svg`}\r\n                    alt=\"Team\"\r\n                />\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">Height</div>\r\n                    <div className=\"profile-entry-right\">{`${height}`}</div>\r\n                </div>\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">Weight</div>\r\n                    <div className=\"profile-entry-right\">{`${weight}`}</div>\r\n                </div>\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">PTS</div>\r\n                    <div className=\"profile-entry-right\">{`${pts}`}</div>\r\n                </div>\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">REB</div>\r\n                    <div className=\"profile-entry-right\">{`${reb}`}</div>\r\n                </div>\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">AST</div>\r\n                    <div className=\"profile-entry-right\">{`${ast}`}</div>\r\n                </div>\r\n                <div className=\"profile-entry\">\r\n                    <div className=\"profile-entry-left\">PIE</div>\r\n                    <div className=\"profile-entry-right\">{`${pie}`}</div>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\nexport default Profile;","\r\nimport React from 'react';\r\nimport nba from '../nba-client';\r\nimport * as d3 from 'd3';\r\nimport { hexbin } from 'd3-hexbin';\r\nimport { court, shots } from 'd3-shotchart';\r\nimport PropTypes from 'prop-types';\r\n\r\nwindow.d3_hexbin = {hexbin : hexbin}; // workaround library problem\r\n\r\nclass ShotChart extends React.Component {\r\n    static propTypes = {\r\n        playerId: PropTypes.number,\r\n        minCount: PropTypes.number,\r\n        chartType: PropTypes.string,\r\n        displayTooltip: PropTypes.bool,\r\n    }\r\n\r\n    componentDidUpdate() {\r\n        nba.stats.shots({\r\n            PlayerID: this.props.playerId\r\n        }).then((response) => {\r\n            const final_shots = response.shot_Chart_Detail.map(shot => ({\r\n                x: (shot.locX + 250) / 10,\r\n                y: (shot.locY + 50) / 10,\r\n                action_type: shot.actionType,\r\n                shot_distance: shot.shotDistance,\r\n                shot_made_flag: shot.shotMadeFlag,\r\n            }));\r\n\r\n            const courtSelection = d3.select(\"#shot-chart\");\r\n            courtSelection.html('');\r\n            const chart_court = court().width(500);\r\n            const chart_shots =\r\n                shots()\r\n                    .shotRenderThreshold(this.props.minCount)\r\n                    .displayToolTips(this.props.displayTooltip)\r\n                    .displayType(this.props.chartType);\r\n            courtSelection.call(chart_court);\r\n            courtSelection.datum(final_shots).call(chart_shots);\r\n        });\r\n    }\r\n    render() {\r\n        return (\r\n            <div id=\"shot-chart\"></div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default ShotChart;","import React from 'react';\r\nimport { Slider, InputNumber, Row, Col } from 'antd';\r\n\r\nclass CounterSlider extends React.Component {\r\n    state = {\r\n        inputValue: this.props.value\r\n    }\r\n\r\n    onChange = (value) => {\r\n        const cleanValue = Number(value) ? value: this.state.inputValue;\r\n        this.setState({\r\n            inputValue: cleanValue,\r\n        });\r\n        this.props.onCountSliderChange(cleanValue);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <Row>\r\n                <Col span={12}>\r\n                    <Slider min={1} max={20} onChange={this.onChange} value={this.state.inputValue} />\r\n                </Col>\r\n                <Col span={4}>\r\n                    <InputNumber\r\n                        min={1}\r\n                        max={20}\r\n                        style={{ marginLeft: 16 }}\r\n                        value={this.state.inputValue}\r\n                        onChange={this.onChange}\r\n                    />\r\n                </Col>\r\n            </Row>\r\n        );\r\n    }\r\n}\r\n\r\nexport default CounterSlider;","import React, {Component} from 'react';\r\nimport { Radio, Row, Col, Switch } from 'antd';\r\n\r\nimport _ from 'lodash';\r\n\r\nimport ShotChart from './ShotChart';\r\nimport CounterSlider from './CounterSlider'\r\n\r\nclass DataViewContainer extends Component {\r\n    state = {\r\n        minCount: 2,\r\n        chartType: 'hexbin',\r\n        displayTooltip : true,\r\n    }\r\n\r\n    onCountSliderChange = (count) => {\r\n        this.setState({ minCount: count });\r\n    }\r\n\r\n    onChartTypeChange = (e) => {\r\n        //console.log(e.target.value);\r\n        this.setState({\r\n            chartType : e.target.value\r\n        })\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"data-view\">\r\n                <ShotChart playerId={this.props.playerId}\r\n                           minCount={this.state.minCount}\r\n                           chartType={this.state.chartType}\r\n                           displayTooltip={this.state.displayTooltip}\r\n                />\r\n\r\n                <div className=\"filters\">\r\n                    {this.state.chartType === 'hexbin' ?\r\n                        <CounterSlider value={this.state.minCount}\r\n                                       onCountSliderChange={_.debounce(this.onCountSliderChange, 500)}/> : null}\r\n                </div>\r\n                <br/>\r\n                <Row>\r\n                    <Col span={9}>\r\n                        <Radio.Group onChange={this.onChartTypeChange} value={this.state.chartType}>\r\n                            <Radio value=\"hexbin\">Hexbin</Radio>\r\n                            <Radio value=\"scatter\">Scatter</Radio>\r\n                        </Radio.Group>\r\n                    </Col>\r\n                    <Col span={4}>\r\n                        <Switch checkedChildren=\"on\" unCheckedChildren=\"off\" defaultChecked onChange={this.onTooltipChange}/>\r\n                    </Col>\r\n                </Row>\r\n            </div>\r\n        );\r\n    }\r\n    onTooltipChange = (displayTooltip) => {\r\n        //console.log(displayTooltip);\r\n        this.setState({ displayTooltip });\r\n    }\r\n\r\n}\r\n\r\nexport default DataViewContainer;","import React, {Component} from 'react';\r\nimport { AutoComplete, Input, Icon } from 'antd';\r\nimport nba from '../nba-client';\r\nimport { PROFILE_PIC_URL_PREFIX } from '../constants';\r\n\r\nconst Option = AutoComplete.Option;\r\n\r\nclass SearchBar extends Component {\r\n    state = {\r\n        dataSource: [],\r\n    };\r\n    render() {\r\n        const { dataSource } = this.state;\r\n        const options = dataSource.map((player) => (\r\n            <Option key={player.playerId} value={player.fullName} className=\"player-option\">\r\n                <img className=\"player-option-image\" src={`${PROFILE_PIC_URL_PREFIX}/${player.playerId}.png`}/>\r\n                <span className=\"player-option-label\">{player.fullName}</span>\r\n            </Option>\r\n        ));\r\n        return (\r\n            <AutoComplete\r\n                className=\"search-bar\"\r\n                dataSource={options}\r\n                onSelect={this.onSelect}\r\n                onSearch={this.handleSearch}\r\n                placeholder=\"Search NBA Player\"\r\n                size=\"large\"\r\n                optionLabelProp=\"value\"\r\n            >\r\n\r\n                <Input suffix={<Icon type=\"search\" className=\"certain-category-icon\" />} />\r\n            </AutoComplete>\r\n\r\n        );\r\n    }\r\n    handleSearch = (value) => {\r\n        const players = nba.searchPlayers(value);\r\n        console.log(players);\r\n\r\n        this.setState({\r\n            dataSource: !value ?\r\n                [] : nba.searchPlayers(value).map(player => ({\r\n                    fullName: player.fullName,\r\n                    playerId: player.playerId,\r\n                }))\r\n        });\r\n    }\r\n\r\n    onSelect = (name) => {\r\n        this.props.handleSelectPlayer(name);\r\n    }\r\n\r\n}\r\n\r\nexport default SearchBar;","import React, {Component} from 'react';\r\nimport nba from '../nba-client'\r\nimport Profile from './Profile';\r\nimport DataViewContainer from \"./DataViewContainer\";\r\nimport SearchBar from './SearchBar';\r\nimport { DEFAULT_PLAYER_INFO } from '../constants';\r\n\r\nclass Main extends Component {\r\n    constructor() {\r\n        super();\r\n        this.state = {\r\n            playerInfo: DEFAULT_PLAYER_INFO\r\n        }\r\n\r\n    }\r\n\r\n    componentDidMount() {\r\n        window.nba = nba;\r\n        this.loadPlayerInfo(this.state.playerInfo.fullName);\r\n    }\r\n\r\n    loadPlayerInfo = (playerName) =>{\r\n        nba.stats.playerInfo({ PlayerID: nba.findPlayer(playerName).playerId})\r\n            .then((info) => {\r\n                //console.log(info);\r\n                const playInfo = Object.assign(info.commonPlayerInfo[0], info.playerHeadlineStats[0]);\r\n                //console.log(playInfo);\r\n                this.setState({ playerInfo: playInfo });\r\n            })\r\n    }\r\n\r\n    handleSelectPlayer = (playerName) => {\r\n        this.loadPlayerInfo(playerName);\r\n    }\r\n\r\n    render() {\r\n        return (\r\n            <div className=\"main\">\r\n                <SearchBar handleSelectPlayer={this.handleSelectPlayer}/>\r\n                <div className=\"player\">\r\n                    <Profile playerInfo={this.state.playerInfo} />\r\n                    <DataViewContainer playerId={this.state.playerInfo.playerId}/>\r\n                </div>\r\n\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nexport default Main;","import React, {Component} from 'react';\r\nimport logo from \"../assets/images/nba-logoman-word-white.svg\";\r\n\r\nclass TopNavBar extends Component {\r\n    render() {\r\n        return (\r\n            <header className=\"App-header\">\r\n                <img src={logo} className=\"App-logo\" alt=\"logo\" />\r\n            </header>\r\n        );\r\n    }\r\n}\r\n\r\nexport default TopNavBar;","import React from 'react';\nimport Main from \"./Main\";\nimport TopNavBar from \"./TopNavBar\";\nfunction App() {\n  return (\n    <div className=\"App\">\n      <TopNavBar/>\n      <Main/>\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './components/App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}